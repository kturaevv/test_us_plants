"""init

Revision ID: cf7b632d18c4
Revises: 
Create Date: 2023-12-05 15:30:26.973733

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cf7b632d18c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Plant file sequence number', sa.Integer(), nullable=True),
    sa.Column('Data Year', sa.Integer(), nullable=True),
    sa.Column('Plant name', sa.String(), nullable=True),
    sa.Column('Plant state abbreviation', sa.String(), nullable=True),
    sa.Column('Plant associated ISO/RTO Territory ', sa.String(), nullable=True),
    sa.Column('Plant FIPS state code', sa.Integer(), nullable=True),
    sa.Column('Plant FIPS county code', sa.Integer(), nullable=True),
    sa.Column('Plant county name', sa.String(), nullable=True),
    sa.Column('Plant latitude', sa.Float(), nullable=True),
    sa.Column('Plant longitude', sa.Float(), nullable=True),
    sa.Column('Plant nominal heat rate (Btu/kWh)', sa.Float(), nullable=True),
    sa.Column('Plant annual net generation (MWh)', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Plant file sequence number')
    )
    op.create_table('auth_refresh_token',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('plant_annual_emmissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('Plant annual Hg emissions (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual NOx emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual SO2 emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CO2 emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CH4 emissions (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual N2O emissions (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual NOx biomass emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual SO2 biomass emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CO2 biomass emissions (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CH4 biomass emissions (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual N2O biomass emissions (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual NOx emissions CHP adjustment value (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual SO2 emissions CHP adjustment value (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CO2 emissions CHP adjustment value (tons)', sa.Float(), nullable=True),
    sa.Column('Plant annual CH4 emissions CHP adjustment value (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual N2O emissions CHP adjustment value (lbs)', sa.Float(), nullable=True),
    sa.Column('Plant annual CO2 equivalent emissions (tons)', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plant_annual_emmissions')
    op.drop_table('auth_refresh_token')
    op.drop_table('plant_data')
    op.drop_table('auth_user')
    # ### end Alembic commands ###
